name: Build Geph Components

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            libwebkit2gtk-4.0-dev \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install pnpm
        run: |
          curl -fsSL https://get.pnpm.io/install.sh | sh -
          echo "$(pnpm root -g)/.bin" >> $GITHUB_PATH

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('gephgui/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build geph4-client
        run: |
          cd geph4-client
          cargo build --release

      - name: Build gephgui-wry
        run: |
          cd gephgui
          pnpm install
          pnpm build
          cd ../gephgui-wry
          cargo build --release

      - name: Generate PAC file
        run: |
          echo 'function FindProxyForURL(url, host) { return "SOCKS5 127.0.0.1:9909; DIRECT"; }' > proxy.pac

      - name: Generate VERSION file
        run: |
          echo "${{ github.ref_name }}" > VERSION
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "${{ github.ref_name }}" > VERSION
          else
            echo "dev-$(git rev-parse --short HEAD)" > VERSION
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: geph-build
          path: |
            geph4-client/target/release/geph4-client
            gephgui-wry/target/release/gephgui-wry
            proxy.pac
            VERSION
