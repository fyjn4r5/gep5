name: Build and Release AppImage

on:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update apt and install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libssl-dev \
            libgtk-3-dev \
            pkg-config \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            clang \
            g++ \
            zlib1g-dev \
            libmpc-dev \
            libmpfr-dev \
            libgmp-dev \
            curl \
            pkg-config \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.0-dev \
            fuse \
            libfuse-dev \
            appimagetool

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Clone geph5 repository
        run: git clone --recurse-submodules https://github.com/geph-official/geph5.git

      - name: Build geph5-client
        run: |
          cd geph5
          cargo build --release --bin geph5-client
          cp target/release/geph5-client ../build/

      - name: Clone gephgui-wry repository
        run: git clone --recurse-submodules https://github.com/geph-official/gephgui-wry.git

      - name: Build gephgui
        run: |
          cd gephgui-wry/gephgui
          pnpm install
          pnpm build

      - name: Build gephgui-wry
        run: |
          cd gephgui-wry
          cargo build --release
          cp target/release/gephgui-wry ../build/

      - name: Generate PAC file
        run: |
          echo 'function FindProxyForURL(url, host) { return "SOCKS5 127.0.0.1:9909; DIRECT"; }' > build/pac

      - name: Generate VERSION file
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "${{ github.ref_name }}" > build/VERSION
          else
            echo "dev-$(git rev-parse --short HEAD)" > build/VERSION
          fi

      - name: Create TAR file
        run: |
          cd build
          tar -Jcvf ../build_geph5_${{ github.ref_name }}_ubu2404.tar.xz .
          cd ..
          mkdir release && mv build_*.tar.xz release/

      - name: Build AppImage
        run: |
          cd build
          appimagetool gephgui-wry-*.AppDir
          mv gephgui-wry-*.AppImage ../release/

      - name: Upload release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/*
          tag: ${{ github.ref_name }}
          overwrite: true
          file_glob: true
