```yaml
name: Build Geph for Mint 21 and 22

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build_geph:
    name: Build Geph for Ubuntu ${{ matrix.ubuntu_version }}
    permissions:
      contents: write
    runs-on: ${{ matrix.ubuntu_version }}
    strategy:
      matrix:
        ubuntu_version: [ubuntu-24.04, ubuntu-22.04]
    steps:
      - name: Create build folder
        run: mkdir ./build

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libgtk-3-dev \
            libappindicator3-dev \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            libssl-dev \
            patchelf \
            strace \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            gcc \
            clang \
            g++ \
            zlib1g-dev \
            libmpc-dev \
            libmpfr-dev \
            libgmp-dev \
            build-essential \
            curl

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install pnpm
        run: |
          curl -fsSL https://get.pnpm.io/install.sh | sh -
          echo "$(pnpm root -g)/.bin" >> $GITHUB_PATH

      - name: Clone gephgui-wry
        run: git clone --recurse-submodules https://github.com/geph-official/gephgui-wry.git

      - name: Build gephgui
        run: |
          cd gephgui-wry/gephgui
          pnpm install
          pnpm build

      - name: Build gephgui-wry
        run: |
          cd gephgui-wry
          cargo build --release

      - name: Copy gephgui-wry
        run: cp gephgui-wry/target/release/gephgui-wry ./build

      - name: Download gephgui-pkg
        run: |
          git clone https://github.com/geph-official/gephgui-pkg.git
          cp -r gephgui-pkg/blobs/linux-x64/* ./build
          cd ./build
          bash -x pull-geph4-client.sh
          mv ./pac-real ./pac
          rm -rf ./pkexec ./pull-geph4-client.sh
          echo "action_state=$(cat ./VERSION)" >> "$GITHUB_ENV"
          echo "ubu_release=$(lsb_release -r | awk '{print $NF}' | tr -d '.')" >> "$GITHUB_ENV"

      - name: Create TAR archive
        run: |
          tar -Jcvf build_${{ env.action_state }}_ubu${{ env.ubu_release }}.tar.xz ./build
          mkdir release && cp build_*.tar.xz ./release

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/*
          tag: geph4_${{ env.action_state }}
          overwrite: true
          file_glob: true
```
